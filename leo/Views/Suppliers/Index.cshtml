@model IEnumerable<leo.ViewModels.SupplierViewModel>

<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1050;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s ease;
    }

        .overlay.active {
            visibility: visible;
            opacity: 1;
        }

    .spinner {
        border: 5px solid rgba(255, 255, 255, 0.2);
        border-top: 5px solid white;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
        margin-bottom: 20px;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .success-message {
        color: white;
        font-size: 1.25rem;
        text-align: center;
        margin-top: 10px;
    }
</style>

<div class="overlay" id="loadingOverlay">
    <div class="spinner"></div>
    <div class="success-message" id="successMessage"></div>
</div>

<!-- Bootstrap Modal -->
<div class="modal fade" id="deleteSuppliersModal" tabindex="-1" aria-labelledby="deleteSuppliersModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteSuppliersModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <i class="nav-icon fas fa-trash-alt" style="font-size: 48px; color: #dc3545;"></i>
                <p class="mt-3">Are you sure you want to delete this Suppliers?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmDeleteButton">Yes</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-start align-items-center">
    <a asp-action="Create" class="btn btn-success rounded-pill me-2">
        <i class="fas fa-plus-circle"></i> Add New Suppliers
    </a>
</div>

<!-- Filter Section -->
<div class="row mb-3">
    <div class="col-md-6">
        <label for="sortFilter" class="form-label">Sort by Date:</label>
        <select id="sortFilter" class="form-select" onchange="sortProductsByDate()">
            <option value="all">All</option>
            <option value="latest">Latest</option>
            <option value="oldest">Oldest</option>
        </select>
    </div>
    <div class="col-md-6">
        <label for="stockFilter" class="form-label">Filter by Stock Status:</label>
        <select id="stockFilter" class="form-select" onchange="filterSuppliers()">
            <option value="all">All</option>
            <option value="unknown">Unknown</option>
            <option value="pending">Pending</option>
            <option value="notice">Notice</option>
            <option value="requested">Requested</option>
            <option value="delivered">Delivered</option>
        </select>
    </div>
</div>

<div class="table-responsive">
    <table id="example1" class="table text-truncate">
        <thead class="table-dark">
            <tr>
                <th>Date</th>
                <th>Suppliers</th>
                <th>Description</th>
                <th>Request Products & Quantities</th>
                <th>Email</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="supplierTableBody">
            @foreach (var supplier in Model)
            {
                <tr>
                    <td>@supplier.ProductDate.ToString("MMMM dd yyyy hh:mm tt")</td>
                    <td>@supplier.SupplierName</td>
                    <td>@supplier.Description</td>
                    <td>@(string.IsNullOrEmpty(supplier.ProductsAndQuantities) ? "No items" : supplier.ProductsAndQuantities)</td>
                    <td>@supplier.Email</td>
                    <td>
                        @if (supplier.Status == "Pending")
                        {
                            <span class="badge bg-warning">Pending</span>
                        }
                        else if (supplier.Status == "Rejected")
                        {
                            <span class="badge bg-danger">Rejected</span>
                        }
                        else if (supplier.Status == "Notice")
                        {
                            <span class="badge bg-danger">Notice</span>
                        }
                        else if (supplier.Status == "Delivered")
                        {
                            <span class="badge bg-success">Delivered</span>
                        }
                        else if (supplier.Status == "Requested")
                        {
                            <span class="badge bg-info">Requested</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Unknown</span>
                        }
                    </td>
                    <td>
                        @if (supplier.Status == "Notice")
                        {
                            <form method="post" asp-action="MarkAsDelivered" asp-route-supplierId="@supplier.SupplierId" class="d-inline">
                                <button type="submit" class="btn btn-success btn-sm rounded-pill">
                                    Mark as Delivered
                                </button>
                            </form>
                        }
                        <form method="post" asp-action="SendEmail" asp-route-supplierId="@supplier.SupplierId" class="d-inline">
                            <button type="submit" class="btn btn-primary btn-sm rounded-pill">
                                <i class="fas fa-envelope"></i> Send Email
                            </button>
                        </form>
                        <a asp-action="Edit" asp-route-id="@supplier.SupplierId" class="btn btn-primary btn-sm rounded-pill">
                            <i class="fas fa-edit"></i> Update
                        </a>
                        @if (supplier.Status == "Requested")
                        {
                            <form asp-action="Approve" asp-route-id="@supplier.SupplierId" method="post" class="d-inline">
                                <button type="submit" class="btn btn-success rounded-pill btn-sm" onclick="return confirm('Are you sure you want to approve this supplier?');">
                                    <i class="fas fa-check"></i> Approve
                                </button>
                            </form>
                        }
                        <form asp-action="Delete" asp-route-id="@supplier.SupplierId" method="post" class="d-inline">
                            <button type="submit" class="delete-button btn btn-danger btn-sm rounded-pill">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        const successMessage = '@TempData["LoginSuccess"]';
        $('#successMessage').text(successMessage);
        $('#loadingOverlay').addClass('active');
        setTimeout(function () {
            $('#loadingOverlay').removeClass('active');
        }, 1000);
    });

    function sortProductsByDate() {
        var filter = $('#sortFilter').val();
        var rows = $('#supplierTableBody tr').get();

        rows.sort(function (a, b) {
            var dateA = new Date($(a).find('td:first').text());
            var dateB = new Date($(b).find('td:first').text());

            if (filter === 'latest') {
                return dateB - dateA;
            } else if (filter === 'oldest') {
                return dateA - dateB;
            } else {
                return 0;
            }
        });

        $.each(rows, function (index, row) {
            $('#supplierTableBody').append(row);
        });
    }

    function filterSuppliers() {
        const stockValue = $('#stockFilter').val();

        $('#supplierTableBody tr').filter(function () {
            let show = true;

            if (stockValue !== 'all') {
                const statusText = $(this).find('td:nth-child(6) span').text().trim();

                if ((stockValue === 'unknown' && statusText !== 'Unknown') ||
                    (stockValue === 'pending' && statusText !== 'Pending') ||
                    (stockValue === 'notice' && statusText !== 'Notice') ||
                    (stockValue === 'requested' && statusText !== 'Requested') ||
                    (stockValue === 'delivered' && statusText !== 'Delivered')) {
                    show = false;
                }
            }

            $(this).toggle(show);
        });
    }
</script>
