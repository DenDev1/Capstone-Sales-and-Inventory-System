@* @model IEnumerable<leo.Models.Order>

@{
    ViewData["Title"] = "Orders List";
}

<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .table-dark {
        background-color: #343a40;
        color: #ffffff;
    }

    .card {
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
    }

    .card-body {
        padding: 1.25rem;
    }

    .alert {
        margin-bottom: 1rem;
    }

    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .table-container {
        overflow-x: auto;
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1050;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s ease;
    }

        .overlay.active {
            visibility: visible;
            opacity: 1;
        }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.2);
        border-top: 4px solid white;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
        margin-bottom: 15px;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .success-message {
        color: white;
        font-size: 1.5rem;
        text-align: center;
    }

    .form-container {
        background: white;
        border-radius: 10px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        font-family: 'Inter', sans-serif;
        color: #495057;
    }

    .form-title {
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #343a40;
    }

    label {
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .form-control {
        border-radius: 0.5rem;
        border: 1px solid #ced4da;
        transition: border-color 0.3s ease;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);
        }

    .submit-btn {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .submit-btn:hover {
            background-color: #0056b3;
        }

    .back-btn {
        background-color: #6c757d;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-size: 1rem;
        text-decoration: none;
        display: inline-block;
        margin-top: 1rem;
    }

        .back-btn:hover {
            background-color: #5a6268;
            color: white;
        }
</style>


<!-- Bootstrap Modal -->
<div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-labelledby="deleteOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteOrderModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <i class="nav-icon fas fa-trash-alt" style="font-size: 48px; color: #dc3545;"></i>
                <p class="mt-3">Are you sure you want to delete this Orders?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmDeleteButton">Yes</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<div class="overlay" id="loadingOverlay">
    <div class="spinner"></div>
    <div class="success-message" id="successMessage"></div>
</div>


<div class="mb-3">
    <a asp-action="Create" class="btn btn-success rounded-pill">
        <i class="fas fa-plus-circle"></i> Add New Sales Order
    </a>
</div>

<div class="table-responsive">
    <table id="example1" class="table text-truncate">
        <thead class="table-dark">
            <tr>
                <th class="text-truncate">Customer Name</th>
                <th class="text-truncate">Products</th>
                <th class="text-truncate">Order Date</th>
                <th class="text-truncate">Quantity Ordered</th>
                <th class="text-truncate">Unit Price</th>
                <th class="text-truncate">Total Amount</th>
                <th class="text-truncate">Partial Payment </th> <!-- New Column -->
                <th class="text-truncate">Remaining Balance</th>
                <th class="text-truncate">Payment Status</th>
                <th class="text-truncate">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="9" class="text-center">No orders found.</td>
                </tr>
            }
            else
            {
                foreach (var order in Model)
                {
                    <tr>
                        <td>@order.CustomerName</td>
                        <td>@(order.Product != null ? order.Product.ProductName : "N/A")</td>
                        <td>@order.OrderDate.ToString("MMMM dd yyyy hh:mm tt")</td>
                        <td>@order.Quantity</td>
                        <td>@order.UnitPrice.ToString("C", new System.Globalization.CultureInfo("fil-PH"))</td>
                        <td>@order.TotalAmount.ToString("C", new System.Globalization.CultureInfo("fil-PH"))</td>
                        <td>@order.PartialPaymentAmount.ToString("C", new System.Globalization.CultureInfo("fil-PH"))</td>
                        <td>@((order.TotalAmount - order.PartialPaymentAmount).ToString("C", new System.Globalization.CultureInfo("fil-PH")))</td> <!-- Remaining Balance Column -->
                        <td>@order.PaymentStatus</td>
                        <td>
                            <!-- Edit Button -->
                            <a asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-primary btn-sm rounded-pill">
                                <i class="fas fa-edit"></i> Update
                            </a>
                            <form asp-action="Delete" asp-route-id="@order.OrderId" method="post" style="display:inline;">
                                <button type="submit" class="delete-button btn btn-danger btn-sm rounded-pill">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </form>


                        </td>
                    </tr>

                }
            }
        </tbody>
    </table>
</div>


            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
            <script>


                // Function to show the modal
                function showDeleteModal(event) {
                    event.preventDefault(); // Prevent the default form submission

                    // Show the modal
                    var deleteModal = new bootstrap.Modal(document.getElementById('deleteOrderModal'));
                    deleteModal.show();

                    // Set up the confirm button to proceed with deletion
                    document.getElementById('confirmDeleteButton').onclick = function () {
                        // Proceed with form submission
                        event.target.closest('form').submit(); // Submit the closest form
                        deleteModal.hide(); // Hide the modal
                    };
                }

                // Attach event listeners to the delete buttons
                document.querySelectorAll('.delete-button').forEach(function (button) {
                    button.addEventListener('click', showDeleteModal);
                });
           

                $(document).ready(function () {
                    const successMessage = '@TempData["LoginSuccess"]';
                    $('#successMessage').text(successMessage);
                    $('#loadingOverlay').addClass('active');

                    setTimeout(function () {
                        $('#loadingOverlay').removeClass('active');
                    }, 1000);
                });



            </script>


 *@