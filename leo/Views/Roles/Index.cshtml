@model IEnumerable<leo.Models.Role>

@{
    ViewData["Title"] = "Index";
  
}



<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1050; /* Ensure it's above all other content */
        visibility: hidden; /* Start hidden */
        opacity: 0; /* Start invisible */
        transition: visibility 0s, opacity 0.5s ease; /* Smooth transition */
    }

        .overlay.active {
            visibility: visible; /* Show overlay */
            opacity: 1; /* Make visible */
        }

    .spinner {
        border: 5px solid rgba(255, 255, 255, 0.2);
        border-top: 5px solid white; /* White top for contrast */
        border-radius: 50%;
        width: 50px; /* Size of the spinner */
        height: 50px;
        animation: spin 1s linear infinite; /* Spin animation */
        margin-bottom: 20px; /* Space between spinner and text */
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .success-message {
        color: white; /* Ensure text is white for visibility */
        font-size: 1.25rem; /* Adjust font size as needed */
        text-align: center;
        margin-top: 10px; /* Space between spinner and text */
    }
</style>

<div class="overlay" id="loadingOverlay">
    <div class="spinner"></div> <!-- Spinner for loading effect -->
    <div class="success-message" id="successMessage"></div>
</div>
@* @if (TempData["SuccessMessage"] != null)
{
    <!-- Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content border-0 shadow-lg rounded-lg">
                <div class="modal-header bg-success text-white rounded-top">
                    <h5 class="modal-title fw-bold" id="successModalLabel">Success</h5>

                </div>
                <div class="modal-body text-center p-4">
                    <!-- Icon for a success message (optional) -->
                    <i class="bi bi-check-circle-fill text-success display-4 mb-3"></i> <!-- Bootstrap Icons -->
                    <p class="lead mb-0">@TempData["SuccessMessage"]</p>
                </div>

            </div>
        </div>
    </div>
} *@
<!-- Bootstrap Modal -->
<div class="modal fade" id="deleteRoleModal" tabindex="-1" aria-labelledby="deleteRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteInventoryModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <i class="nav-icon fas fa-trash-alt" style="font-size: 48px; color: #dc3545;"></i>
                <p class="mt-3">Are you sure you want to delete this items?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmDeleteButton">Yes</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@* 
    <p class="mb-3">
        <a asp-action="Create" class="btn btn-primary">Add New Role</a>
    </p>
 *@
<div class="table-responsive">
    <table id="example1" class="table text-truncate">
        <thead class="table-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RoleName)
                    </th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoleName)
                        </td>
                        <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.RoleId" class="btn btn-primary btn-sm rounded-pill">
                            <i class="fas fa-edit"></i> Update
                        </a>


                                    <form asp-action="Delete" asp-route-id="@item.RoleId" method="post" class="d-inline">

                                        <!-- Delete Button -->
                                        <button type="submit" class="btn btn-danger rounded-pill btn-sm" onclick="return confirmDeletion();">  <i class="fas fa-trash-alt"></i> Delete</button>

                                    </form> 

                        </td>
                    </tr>
                }
            </tbody>
        </table>
        </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
    // Function to show the modal
    function showDeleteModal(event) {
        event.preventDefault(); // Prevent the default form submission

        // Show the modal
        var deleteModal = new bootstrap.Modal(document.getElementById('deleteRoleModal'));
        deleteModal.show();

        // Set up the confirm button to proceed with deletion
        document.getElementById('confirmDeleteButton').onclick = function () {
            // Proceed with form submission
            event.target.closest('form').submit(); // Submit the closest form
            deleteModal.hide(); // Hide the modal
        };
    }

    // Attach event listeners to the delete buttons
    document.querySelectorAll('.delete-button').forEach(function (button) {
        button.addEventListener('click', showDeleteModal);
    });
        $(document).ready(function () {
            var successModal = $('#successModal');

            // Show the modal
            successModal.modal('show');

            // Automatically hide the modal after 3 seconds
            setTimeout(function () {
                successModal.modal('hide');
            }, 3000); // 3000 milliseconds = 3 seconds
        });
    </script>
