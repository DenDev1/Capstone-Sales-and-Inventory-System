@using System.Globalization
@using System.Text.Json
@using Microsoft.AspNetCore.Identity
@model leo.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}
<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1050; /* Ensure it's above all other content */
        visibility: hidden; /* Start hidden */
        opacity: 0; /* Start invisible */
        transition: visibility 0s, opacity 0.5s ease; /* Smooth transition */
    }

        .overlay.active {
            visibility: visible; /* Show overlay */
            opacity: 1; /* Make visible */
        }

    .spinner {
        border: 5px solid rgba(255, 255, 255, 0.2);
        border-top: 5px solid white; /* White top for contrast */
        border-radius: 50%;
        width: 50px; /* Size of the spinner */
        height: 50px;
        animation: spin 1s linear infinite; /* Spin animation */
        margin-bottom: 20px; /* Space between spinner and text */
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .success-message {
        color: white; /* Ensure text is white for visibility */
        font-size: 1.25rem; /* Adjust font size as needed */
        text-align: center;
        margin-top: 10px; /* Space between spinner and text */
    }
    /* Additional Aesthetic Styling */
    .card-header.bg-gradient-light {
        background: linear-gradient(135deg, #e9ecef, #ffffff);
    }

    .product-card {
        transition: transform 0.3s ease;
    }

        .product-card:hover {
            transform: scale(1.05);
        }
</style>

<div class="overlay" id="loadingOverlay">
    <div class="spinner"></div> <!-- Spinner for loading effect -->
    <div class="success-message" id="successMessage"></div>
</div>



<!-- Low Stock Alert Modal -->
<div class="modal fade" id="lowStockModal" tabindex="-1" aria-labelledby="lowStockModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title" id="lowStockModalLabel">Low Stock Alert</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul id="lowStockItemList" class="list-group"></ul>
            </div>
            <div class="modal-footer">
                <!-- Add the button that links to Inventory -->
                <a href="@Url.Action("Index", "Inventory")" class="btn btn-success">Go to Inventory</a>
   
            </div>
        </div>
    </div>
</div>



<!-- Aesthetic Dashboard Container -->
<div class="container mt-4">
    <h1 class="mb-4" style="font-family: 'Poppins', sans-serif; font-weight: 600;">Dashboard Overview</h1>

    <!-- Metrics Overview -->
    <div class="row mb-4">
        <!-- Categories Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: #4A90E2; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-th-list fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Categories</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.CategoryCount</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Categories" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                                <i class="fas fa-folder-open me-2"></i>
                                <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background:#50B83C ; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-cube fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Products</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.ProductCount</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Inventory" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                                <i class="fas fa-folder-open me-2"></i>
                                <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Suppliers Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background:#FF8C42; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-industry fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Suppliers</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.SupplierCount</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Suppliers" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                                <i class="fas fa-folder-open me-2"></i>
                                <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Users Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background:#8A3FFC ; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-users fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Staffs</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.UsersCount</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Users" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                                <i class="fas fa-folder-open me-2"></i>
                                <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <!-- Sales Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background:  #FFC107 ; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-chart-line fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Sales</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.SalesCount</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-controller="Sales" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                                <i class="fas fa-folder-open me-2"></i>
                                <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Stocks Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background:  #20C997 ; border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-boxes fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Stocks</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.StockCount</p>
                        <a asp-controller="Inventory" asp-action="Index" class="text-white text-decoration-none mt-2 d-flex align-items-center">
                            <i class="fas fa-folder-open me-2"></i>
                            <span class="badge bg-light text-dark" style="border-radius: 15px; padding: 0.25rem 0.75rem;">Record's</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        {
            <!-- Total Sales Card -->
            <div class="col-md-3">
                <div class="card shadow-sm mb-4 border-0" style="background: #FF5A5F; border-radius: 12px;">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-chart-line fa-2x me-3 text-white"></i>
                            <div class="text-white">
                                <h5 class="card-title mb-1" style="font-weight: 500;">Total Sales</h5>
                                <!-- Total Sales Amount -->
                                <p class="card-text fs-4 mb-0" id="totalSalesAmount" style="font-weight: 600;">@Model.TotalSales.ToString("C", new CultureInfo("en-PH"))</p>
                            </div>
                        </div>
                        <!-- Toggle Button -->
                        <button id="toggleTotalSalesCard" class="btn btn-light btn-sm" style="padding: 0.1rem 0.3rem; font-size: 0.7rem;">
                            <i class="fas fa-eye" id="toggleIcon" style="font-size: 0.4rem;"></i>
                        </button>


                    </div>
                </div>
            </div>
        }

    </div>






















    <!-- Grid Layout for Latest and Top Selling Products -->
    <div class="row g-5 justify-content-center">

        <!-- Latest Products -->
        <div class="col-md-6">
            <div class="card shadow-lg border-0" style="border-radius: 15px; background: #f7f7f7;">
                <div class="card-header bg-gradient-light text-center py-3" style="border-radius: 15px 15px 0 0;">
                    <h4 style="font-weight: 600; color: #555;">Latest Products</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (Model.LatestProducts != null && Model.LatestProducts.Any())
                        {
                            @foreach (var product in Model.LatestProducts)
                            {
                                <div class="col">
                                    <div class="card product-card shadow-sm border-0 h-100 d-flex flex-column text-center" style="border-radius: 12px;">
                                        <div class="card-body flex-grow-1 d-flex flex-column justify-content-center">
                                            <h5 class="card-title" style="font-weight: 600; color: #333;">@product.ProductName</h5>
                                            <p class="card-text" style="font-weight: 500; color: #666;">Price: <strong>@product.Price.ToString("C", new CultureInfo("en-PH"))</strong></p>
                                            <p class="card-text" style="font-weight: 500; color: #666;">Stock: <strong>@product.StockQuantity</strong></p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12">
                                <div class="alert alert-info text-center" role="alert" style="font-size: 1.1rem;">
                                    No latest products available.
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Top Selling Products -->
        <div class="col-md-6">
            <div class="card shadow-lg border-0" style="border-radius: 15px; background: #f7f7f7;">
                <div class="card-header bg-gradient-light text-center py-3" style="border-radius: 15px 15px 0 0;">
                    <h4 style="font-weight: 600; color: #555;">Top Selling Products</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (Model.TopSellingProducts != null && Model.TopSellingProducts.Any())
                        {
                            @foreach (var product in Model.TopSellingProducts)
                            {
                                <div class="col">
                                    <div class="card product-card shadow-sm border-0 h-100 d-flex flex-column text-center" style="border-radius: 12px;">
                                        <div class="card-body flex-grow-1 d-flex flex-column justify-content-center">
                                            <h5 class="card-title" style="font-weight: 600; color: #333;">@product.ProductName</h5>
                                            <p class="card-text" style="font-weight: 500; color: #666;">Total Sold: <strong>@product.TotalSold</strong></p>
                                            <p class="card-text" style="font-weight: 500; color: #666;">Current Price: <strong>@product.Price.ToString("C", new CultureInfo("en-PH"))</strong></p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12">
                                <div class="alert alert-info text-center" role="alert" style="font-size: 1.1rem;">
                                    No top selling products available.
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <h2 class="mb-4">Product Sales Analytics (Quantity Ordered)</h2>
    <div class="card shadow-sm">
        <div class="card-body">

            <canvas id="productSalesChart" width="400" height="100"></canvas>

        </div>
    </div>


@*     <!-- Inventory Report by Month -->
        <h2 class="mb-4">Inventory Report by Month</h2>
        <div class="card shadow-sm">
            <div class="card-body">
                <canvas id="inventoryReportChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
</div>
 *@

@*
        <!-- Total Sales Analytics (PHP) -->
        <div class="col-md-6">
            <h2 class="mb-4">Total Sales Analytics </h2>
            <div class="card shadow-sm">
                <div class="card-body">
                    <canvas id="totalSalesChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div> *@


<!-- Scripts -->
@section Scripts {
    <!-- Chart.js Library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Include Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <!-- Chart Initialization Script -->

    <script>

        $(document).ready(function () {
            // Show loading overlay and success message
            const successMessage = '@TempData["LoginSuccess"]'; // Get success message
            $('#successMessage').text(successMessage); // Set the success message
            $('#loadingOverlay').addClass('active'); // Show overlay

            // Automatically close the loading overlay and redirect after a few seconds (e.g., 2 seconds)
            setTimeout(function () {
                $('#loadingOverlay').removeClass('active'); // Hide overlay

            }, 2000); // 3000 milliseconds = 3 seconds
        });

        $(document).ready(function () {
            // Initially hide the total sales amount
            $('#totalSalesAmount').hide(); // Ensure it is hidden on page load

            $('#toggleTotalSalesCard').click(function () {
                // Toggle visibility of the total sales amount
                $('#totalSalesAmount').toggle();

                // Change the icon based on visibility
                var icon = $('#toggleIcon');
                if (icon.hasClass('fa-eye')) {
                    icon.removeClass('fa-eye').addClass('fa-eye-slash'); // Show "closed" icon
                } else {
                    icon.removeClass('fa-eye-slash').addClass('fa-eye'); // Show "open" icon
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize Product Sales Chart
            var productSalesCtx = document.getElementById('productSalesChart').getContext('2d');
            // var totalSalesCtx = document.getElementById('totalSalesChart').getContext('2d');

            // Data for Product Sales Chart
            var productLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // Monthly labels
            var productQuantities = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyProductQuantities)); // Ensure this holds monthly quantities
            // var totalSalesData = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyTotalSales)); // Ensure this holds monthly total sales

            // // Daily, Weekly, and Monthly Sales
            // var dailySales = @Html.Raw(JsonSerializer.Serialize(Model.DailySales));
            // var weeklySales = @Html.Raw(JsonSerializer.Serialize(Model.WeeklySales));
            // var monthlySales = @Html.Raw(JsonSerializer.Serialize(Model.MonthlySales));

            // Product Sales Column Line Chart
            var productSalesChart = new Chart(productSalesCtx, {
                type: 'line', // Change to 'line' for a column line graph
                data: {
                    labels: productLabels,
                    datasets: [{
                        label: 'Quantity Ordered',
                        data: productQuantities,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)', // Fill color under the line
                        borderColor: 'rgba(75, 192, 192, 1)', // Line color
                        borderWidth: 2,
                        fill: true, // Fill the area under the line
                        tension: 0.4 // Smoothness of the line
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: { grid: { display: false } },
                        y: { beginAtZero: true }
                    }
                }
            });
            // // Initialize Inventory Report Chart
            // var inventoryReportCtx = document.getElementById('inventoryReportChart').getContext('2d');

            // // Data for Inventory Report Chart
            // var inventoryReportQuantities = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyProductQuantities));

            // // Inventory Report Bar Chart
            // var inventoryReportChart = new Chart(inventoryReportCtx, {
            //     type: 'bar',
            //     data: {
            //         labels: productLabels,
            //         datasets: [{
            //             label: 'TotalSold',
            //             data: inventoryReportQuantities,
            //             backgroundColor: 'rgba(153, 102, 255, 0.2)',
            //             borderColor: 'rgba(153, 102, 255, 1)',
            //             borderWidth: 2
            //         }]
            //     },
            //     options: {
            //         responsive: true,
            //         scales: {
            //             y: {
            //                 beginAtZero: true
            //             }
            //         }
            //     }
            // });

            // Alert for Low Stock Items
            var lowStockItems = @Html.Raw(JsonSerializer.Serialize(Model.LowStockItems)); // Ensure this holds your low stock items
            if (lowStockItems.length > 0) {
                // Create list items for the modal
                var lowStockItemList = lowStockItems.map(item => `<li class="list-group-item d-flex justify-content-between align-items-center">
                                            ${item.ProductName}
                                            <span class="badge bg-danger text-dark">${item.Quantity} Low Stock</span>
                                        </li>`).join('');

                // Populate the modal with the items
                $('#lowStockItemList').html(lowStockItemList);

                // Show the modal
                $('#lowStockModal').modal('show');
            }
            // // Total Sales Column Line Chart
            // var totalSalesChart = new Chart(totalSalesCtx, {
            //     type: 'line', // Change to 'line' for a column line graph
            //     data: {
            //         labels: productLabels,
            //         datasets: [{
            //             label: 'Total Sales (PHP)',
            //             data: totalSalesData,
            //             backgroundColor: 'rgba(54, 162, 235, 0.2)', // Fill color under the line
            //             borderColor: 'rgba(54, 162, 235, 1)', // Line color
            //             borderWidth: 2,
            //             fill: true, // Fill the area under the line
            //             tension: 0.4 // Smoothness of the line
            //         },
            //         {
            //             label: 'Daily Sales',
            //             data: dailySales,
            //             backgroundColor: 'rgba(255, 206, 86, 0.2)', // Fill color for daily sales
            //             borderColor: 'rgba(255, 206, 86, 1)', // Line color for daily sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         },
            //         {
            //             label: 'Weekly Sales',
            //             data: weeklySales,
            //             backgroundColor: 'rgba(153, 102, 255, 0.2)', // Fill color for weekly sales
            //             borderColor: 'rgba(153, 102, 255, 1)', // Line color for weekly sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         },
            //         {
            //             label: 'Monthly Sales',
            //             data: monthlySales,
            //             backgroundColor: 'rgba(255, 99, 132, 0.2)', // Fill color for monthly sales
            //             borderColor: 'rgba(255, 99, 132, 1)', // Line color for monthly sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         }]
            //     },
            //     options: {
            //         responsive: true,
            //         scales: {
            //             x: { grid: { display: false } },
            //             y: { beginAtZero: true }
            //         },
            //         plugins: {
            //             tooltip: {
            //                 callbacks: {
            //                     label: function (context) {
            //                         return `${context.dataset.label}: ₱${context.parsed.y.toFixed(2)}`;
            //                     }
            //                 }
            //             }
            //         }
            //     }
            // });
        });
    </script>
}
