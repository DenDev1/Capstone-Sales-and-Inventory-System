@using System.Globalization
@using System.Text.Json
@using Microsoft.AspNetCore.Identity
@model leo.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Home Page";
}

<!-- Low Stock Alert Modal -->
<div class="modal fade" id="lowStockModal" tabindex="-1" aria-labelledby="lowStockModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title" id="lowStockModalLabel">Low Stock Alert</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul id="lowStockItemList" class="list-group"></ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Aesthetic Dashboard Container -->
<div class="container mt-4">
    <h1 class="mb-4 " style="font-family: 'Poppins', sans-serif; font-weight: 600;">Dashboard Overview</h1>

    <!-- Metrics Overview -->
    <div class="row mb-4">
        <!-- Categories Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-th-list fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Categories</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.CategoryCount</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-cube fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Products</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.ProductCount</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Suppliers Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-industry fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Suppliers</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.SupplierCount</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Users Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #fccb90 0%, #d57eeb 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-users fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Staffs</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.UsersCount</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <!-- Sales Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #f6d365 0%, #fda085 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-chart-line fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Sales</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.SalesCount</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stocks Record -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 12px;">
                <div class="card-body d-flex align-items-center">
                    <i class="fas fa-boxes fa-2x me-3 text-white"></i>
                    <div class="text-white">
                        <h5 class="card-title mb-1" style="font-weight: 500;">Stocks</h5>
                        <p class="card-text fs-4 mb-0" style="font-weight: 600;">@Model.StockCount</p>
                    </div>
                </div>
            </div>
        </div>
        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        {
            <!-- Total Sales Card -->
            <div class="col-md-3">
                <div class="card shadow-sm mb-4 border-0" style="background: linear-gradient(135deg, #ff758c 0%, #ff7eb3 100%); border-radius: 12px;">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-dollar-sign fa-2x me-3 text-white"></i>
                            <div class="text-white">
                                <h5 class="card-title mb-1" style="font-weight: 500;">Total Sales</h5>
                                <!-- Total Sales Amount -->
                                <p class="card-text fs-4 mb-0" id="totalSalesAmount" style="font-weight: 600;">@Model.TotalSales.ToString("C", new CultureInfo("en-PH"))</p>
                            </div>
                        </div>
                        <!-- Toggle Button -->
                        <button id="toggleTotalSalesCard" class="btn btn-light btn-sm">
                            <i class="fas fa-eye" id="toggleIcon"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@*    <h2 class="mt-4 mb-3">Low Stock Items</h2>

    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card border-warning shadow-sm">
                    <div class="card-body">
                        @if (Model.LowStockItems != null && Model.LowStockItems.Any())
                        {
                            <table id="example1" class="table table-hover table-striped text-truncate">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">Product Name</th>
                                        <th scope="col">Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.LowStockItems)
                                    {
                                        <tr>
                                            <td>@item.ProductName</td>
                                            <td>
                                                <span class="badge bg-danger text-dark">@item.Quantity</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-info text-center" role="alert">
                                No low stock items.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
 *@
<!-- Analytics Row for Charts -->
<div class="row mb-4">
    <!-- Product Sales Analytics (Quantity Ordered) -->
    <div class="col-md-6">
        <h2 class="mb-4">Product Sales Analytics</h2>
        <div class="card shadow-sm">
            <div class="card-body">
                <canvas id="productSalesChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <!-- Inventory Report by Month -->
    <div class="col-md-6">
        <h2 class="mb-4">Inventory Report by Month</h2>
        <div class="card shadow-sm">
            <div class="card-body">
                <canvas id="inventoryReportChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
</div>


@*
        <!-- Total Sales Analytics (PHP) -->
        <div class="col-md-6">
            <h2 class="mb-4">Total Sales Analytics </h2>
            <div class="card shadow-sm">
                <div class="card-body">
                    <canvas id="totalSalesChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div> *@


<!-- Scripts -->
@section Scripts {
    <!-- Chart.js Library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Include Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <!-- Chart Initialization Script -->

    <script>



        $(document).ready(function () {
            $('#toggleTotalSalesCard').click(function () {
                $('#totalSalesAmount').toggle(); // Toggle visibility of the total sales amount

                // Change the icon based on visibility
                var icon = $('#toggleIcon');
                if (icon.hasClass('fa-eye')) {
                    icon.removeClass('fa-eye').addClass('fa-eye-slash'); // Show "closed" icon
                } else {
                    icon.removeClass('fa-eye-slash').addClass('fa-eye'); // Show "open" icon
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize Product Sales Chart
            var productSalesCtx = document.getElementById('productSalesChart').getContext('2d');
            // var totalSalesCtx = document.getElementById('totalSalesChart').getContext('2d');

            // Data for Product Sales Chart
            var productLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // Monthly labels
            var productQuantities = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyProductQuantities)); // Ensure this holds monthly quantities
            // var totalSalesData = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyTotalSales)); // Ensure this holds monthly total sales

            // // Daily, Weekly, and Monthly Sales
            // var dailySales = @Html.Raw(JsonSerializer.Serialize(Model.DailySales));
            // var weeklySales = @Html.Raw(JsonSerializer.Serialize(Model.WeeklySales));
            // var monthlySales = @Html.Raw(JsonSerializer.Serialize(Model.MonthlySales));

            // Product Sales Column Line Chart
            var productSalesChart = new Chart(productSalesCtx, {
                type: 'line', // Change to 'line' for a column line graph
                data: {
                    labels: productLabels,
                    datasets: [{
                        label: 'Quantity Ordered',
                        data: productQuantities,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)', // Fill color under the line
                        borderColor: 'rgba(75, 192, 192, 1)', // Line color
                        borderWidth: 2,
                        fill: true, // Fill the area under the line
                        tension: 0.4 // Smoothness of the line
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: { grid: { display: false } },
                        y: { beginAtZero: true }
                    }
                }
            });
            // Initialize Inventory Report Chart
            var inventoryReportCtx = document.getElementById('inventoryReportChart').getContext('2d');

            // Data for Inventory Report Chart
            var inventoryReportQuantities = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyProductQuantities));

            // Inventory Report Bar Chart
            var inventoryReportChart = new Chart(inventoryReportCtx, {
                type: 'bar',
                data: {
                    labels: productLabels,
                    datasets: [{
                        label: 'Inventory Stock',
                        data: inventoryReportQuantities,
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Alert for Low Stock Items
            var lowStockItems = @Html.Raw(JsonSerializer.Serialize(Model.LowStockItems)); // Ensure this holds your low stock items
            if (lowStockItems.length > 0) {
                // Create list items for the modal
                var lowStockItemList = lowStockItems.map(item => `<li class="list-group-item d-flex justify-content-between align-items-center">
                                            ${item.ProductName}
                                            <span class="badge bg-danger text-dark">${item.Quantity} Low Stock</span>
                                        </li>`).join('');

                // Populate the modal with the items
                $('#lowStockItemList').html(lowStockItemList);

                // Show the modal
                $('#lowStockModal').modal('show');
            }
            // // Total Sales Column Line Chart
            // var totalSalesChart = new Chart(totalSalesCtx, {
            //     type: 'line', // Change to 'line' for a column line graph
            //     data: {
            //         labels: productLabels,
            //         datasets: [{
            //             label: 'Total Sales (PHP)',
            //             data: totalSalesData,
            //             backgroundColor: 'rgba(54, 162, 235, 0.2)', // Fill color under the line
            //             borderColor: 'rgba(54, 162, 235, 1)', // Line color
            //             borderWidth: 2,
            //             fill: true, // Fill the area under the line
            //             tension: 0.4 // Smoothness of the line
            //         },
            //         {
            //             label: 'Daily Sales',
            //             data: dailySales,
            //             backgroundColor: 'rgba(255, 206, 86, 0.2)', // Fill color for daily sales
            //             borderColor: 'rgba(255, 206, 86, 1)', // Line color for daily sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         },
            //         {
            //             label: 'Weekly Sales',
            //             data: weeklySales,
            //             backgroundColor: 'rgba(153, 102, 255, 0.2)', // Fill color for weekly sales
            //             borderColor: 'rgba(153, 102, 255, 1)', // Line color for weekly sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         },
            //         {
            //             label: 'Monthly Sales',
            //             data: monthlySales,
            //             backgroundColor: 'rgba(255, 99, 132, 0.2)', // Fill color for monthly sales
            //             borderColor: 'rgba(255, 99, 132, 1)', // Line color for monthly sales
            //             borderWidth: 2,
            //             fill: true,
            //             tension: 0.4
            //         }]
            //     },
            //     options: {
            //         responsive: true,
            //         scales: {
            //             x: { grid: { display: false } },
            //             y: { beginAtZero: true }
            //         },
            //         plugins: {
            //             tooltip: {
            //                 callbacks: {
            //                     label: function (context) {
            //                         return `${context.dataset.label}: ₱${context.parsed.y.toFixed(2)}`;
            //                     }
            //                 }
            //             }
            //         }
            //     }
            // });
        });
    </script>
}
