@model IEnumerable<leo.Models.Return>

@{
    ViewData["Title"] = "Index";
}
<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 1050; /* Ensure it's above all other content */
        visibility: hidden; /* Start hidden */
        opacity: 0; /* Start invisible */
        transition: visibility 0s, opacity 0.5s ease; /* Smooth transition */
    }

        .overlay.active {
            visibility: visible; /* Show overlay */
            opacity: 1; /* Make visible */
        }

    .spinner {
        border: 5px solid rgba(255, 255, 255, 0.2);
        border-top: 5px solid white; /* White top for contrast */
        border-radius: 50%;
        width: 50px; /* Size of the spinner */
        height: 50px;
        animation: spin 1s linear infinite; /* Spin animation */
        margin-bottom: 20px; /* Space between spinner and text */
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .success-message {
        color: white; /* Ensure text is white for visibility */
        font-size: 1.25rem; /* Adjust font size as needed */
        text-align: center;
        margin-top: 10px; /* Space between spinner and text */
    }
</style>

<div class="overlay" id="loadingOverlay">
    <div class="spinner"></div> <!-- Spinner for loading effect -->
    <div class="success-message" id="successMessage"></div>
</div>
<!-- Bootstrap Modal -->
<div class="modal fade" id="deleteReturnsModal" tabindex="-1" aria-labelledby="deleteReturnsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteReturnsModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <i class="nav-icon fas fa-trash-alt" style="font-size: 48px; color: #dc3545;"></i>
                <p class="mt-3">Are you sure you want to delete this Returns?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="confirmDeleteButton">Yes</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
@if (User.IsInRole("Staff"))
{
    <p>
        <a asp-action="Create" class="btn btn-success rounded-pill shadow-sm">
            <i class="fas fa-plus-circle"></i> Add New Returned
        </a>
    </p>
}

<div class="table-responsive">
    <table id="example1" class="table text-truncate">
        <thead class="table-dark">
                        <tr>
                    <th>Products</th>

                            <th>@Html.DisplayNameFor(model => model.First().QuantityReturned)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Reason)</th>
                <th>@Html.DisplayNameFor(model => model.First().CustomerName)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Status)</th>
                <th>@Html.DisplayNameFor(model => model.First().OrderDate)</th> <!-- New header -->
                <th>@Html.DisplayNameFor(model => model.First().ReturnDate )</th>

                @if (User.IsInRole("Admin")) // Check if the user is an admin
                {
                    <th class="text-center">Actions</th> <!-- Only show for Admin users -->
                }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Product.ProductName)</td>
                                <td>@Html.DisplayFor(modelItem => item.QuantityReturned)</td>
                                <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                    <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>

                                <td>
                                    @if (item.Status == ReturnStatus.UnderWarranty)
                                    {
                                        <span class="badge bg-warning">UnderWarranty</span>
                       
                               
                                    }
                                    else if (item.Status == ReturnStatus.Rejected)
                                    {
                                        <span class="badge bg-danger">Rejected</span>
                                    }
                                    else if (item.Status == ReturnStatus.Approved)
                                    {
                                        <span class="badge bg-info">Approved</span>
                                    }
                                </td>
                    <td>@item.ReturnDate.ToString("MMMM dd yyyy hh:mm tt")</td>
                    <td>@item.OrderDate.ToString("MMMM dd yyyy hh:mm tt")</td> <!-- New data cell -->
                                <td class="text-center">
                                    @if (User.IsInRole("Admin"))
                                    {
                                       @*  <a asp-action="Edit" asp-route-id="@item.ReturnId" class="btn btn-sm btn-primary rounded-pill">Update</a> *@

                                        // Check if the status is Pending for approval
                                        @if (item.Status == ReturnStatus.UnderWarranty)
                                        {
                                            <form asp-action="Approve" asp-route-id="@item.ReturnId" method="post" style="display:inline;">
                                                <button type="submit" class="btn btn-sm btn-success rounded-pill">Approve</button>
                                            </form>

                                            <form asp-action="Reject" asp-route-id="@item.ReturnId" method="post" style="display:inline;">
                                                <button type="submit" class="btn btn-sm btn-danger rounded-pill">Reject</button>
                                            </form>
                                        }
                                    }
                              @*       <form asp-action="Delete" asp-route-id="@item.ReturnId" method="post" class="d-inline">
                                <button type="submit" class="delete-button btn btn-danger btn-sm rounded-pill">
                                    <i class="fas fa-trash"></i> Delete
                                </button>

                                    </form> *@

                                </td>


                            </tr>
                        }
                    </tbody>
                </table>
 </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
        <script>

        // Function to show the modal
        function showDeleteModal(event) {
            event.preventDefault(); // Prevent the default form submission

            // Show the modal
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteReturnsModal'));
            deleteModal.show();

            // Set up the confirm button to proceed with deletion
            document.getElementById('confirmDeleteButton').onclick = function () {
                // Proceed with form submission
                event.target.closest('form').submit(); // Submit the closest form
                deleteModal.hide(); // Hide the modal
            };
        }

        // Attach event listeners to the delete buttons
        document.querySelectorAll('.delete-button').forEach(function (button) {
            button.addEventListener('click', showDeleteModal);
        });
        $(document).ready(function () {
            // Show loading overlay and success message
            const successMessage = '@TempData["LoginSuccess"]'; // Get success message
            $('#successMessage').text(successMessage); // Set the success message
            $('#loadingOverlay').addClass('active'); // Show overlay

            // Automatically close the loading overlay and redirect after a few seconds (e.g., 1 seconds)
            setTimeout(function () {
                $('#loadingOverlay').removeClass('active'); // Hide overlay

            }, 1000); // 1000 milliseconds = 1seconds
        });
        </script>
